name: Test and Analyse
on:
  pull_request:
    types: [ opened,reopened,edited ]
    branches:
      - dev

jobs:
  test_and_analyse:
    name: Test and Analyse
    runs-on: ubuntu-latest
    strategy:
      matrix:
        dotnet-version: [ 3.1.x ]
    steps:
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 1.11

      - name: Set up dotnet ${{ matrix.dotnet-version }}
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: ${{ matrix.dotnet-version }}

      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Install sonar scanner
        run: |
          dotnet tool install --global dotnet-sonarscanner

      - name: Install test coverage tool
        run: |
          dotnet tool install --global JetBrains.dotCover.GlobalTool

      - name: Prepare test environment
        env:
          TEST_ENV: ${{ secrets.TEST_ENV }}
        run: |
          echo $TEST_ENV > Spare.NET.Sdk.Test/TestEnvironment/testEnvironment.json

      - name: Test and analyse
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
        run: |
          export PATH=$PATH:$HOME/.dotnet/tools/
          dotnet restore
          dotnet sonarscanner begin /k:"CSharp-SDK" /d:sonar.host.url="$SONAR_HOST_URL"  /d:sonar.login="$SONAR_TOKEN" /d:sonar.cs.dotcover.reportsPaths=dotCover.Output.html
          dotnet dotcover test -l:"console;verbosity=normal" --logger "trx;logfilename=testResult.trx"  --no-restore --filter "TestCategory=AutomatedTest" --dcReportType=HTML
          dotnet sonarscanner end /d:sonar.login="$SONAR_TOKEN"
